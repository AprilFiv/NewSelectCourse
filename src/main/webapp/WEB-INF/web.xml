<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="WebApp_ID" version="2.5">

	<display-name>NewSC</display-name>
  
	<!-- spring 和  Hibernate的配置文件 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
		     classpath:applicationContext.xml
	    </param-value>
	</context-param>

	<!-- 编码设置 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- openSessionInView配置 作用是延迟session关闭到view层 -->
	<filter>
		<filter-name>openSessionInViewFilter</filter-name>
		<filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class>
		<init-param>
			<param-name>singleSession</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<!-- 监听servletContext，启动contextConfigLocation中的spring配置信息 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- 防止spring内存溢出监听器 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>

	<!-- Struts2 filter -->
	
	<filter>
		<filter-name>struts2</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
	</filter>
	
	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>


	<filter-mapping>
		<filter-name>openSessionInViewFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 配置session超时时间，单位分钟 -->
	<session-config>
		<session-timeout>60</session-timeout>
	</session-config>
	
	<!-- 默认的错误处理页面 -->  
    <error-page>  
        <error-code>403</error-code>  
        <location>/error.jsp</location>  
    </error-page>  
    <error-page>  
        <error-code>404</error-code>  
        <location>/error.jsp</location>  
    </error-page>  
    <!-- 仅仅在调试的时候注视掉,在正式部署的时候不能注释 -->  
    <!-- 这样配置也是可以的，表示发生500错误的时候，转到500.jsp页面处理。 -->  
    <error-page>   
        <error-code>500</error-code>   
        <location>/error.jsp</location>   
    </error-page>   
      
    <!-- 这样的配置表示如果jsp页面或者servlet发生java.lang.Exception类型（当然包含子类）的异常就会转到500.jsp页面处理。 -->  
    <error-page>   
        <exception-type>java.lang.Exception</exception-type>   
        <location>/error.jsp</location>   
    </error-page>   
      
    <error-page>   
        <exception-type>java.lang.Throwable</exception-type>   
        <location>/500.jsp</location>   
    </error-page>  
    <!--   
    当error-code和exception-type都配置时，exception-type配置的页面优先级高  
    及出现500错误，发生异常Exception时会跳转到500.jsp  
     -->   
	
	<welcome-file-list>
		<welcome-file>/index.jsp</welcome-file>
	</welcome-file-list>
</web-app>